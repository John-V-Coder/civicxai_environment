# Generated by Django 5.2.7 on 2025-10-22 03:38

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('explainable_ai', '0002_datasource'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllocationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('region_id', models.CharField(db_index=True, max_length=100)),
                ('region_name', models.CharField(help_text='Human-readable region name', max_length=200)),
                ('poverty_index', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('project_impact', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('environmental_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('corruption_risk', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('notes', models.TextField(blank=True)),
                ('urls', models.TextField(blank=True, help_text='Reference URLs, one per line')),
                ('status', models.CharField(choices=[('pending', 'Pending Analysis'), ('processing', 'Being Processed'), ('analyzed', 'Analysis Complete'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('priority_score', models.FloatField(blank=True, null=True)),
                ('priority_level', models.CharField(blank=True, max_length=50)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('recommended_allocation_percentage', models.FloatField(blank=True, null=True)),
                ('ai_recommendation', models.TextField(blank=True)),
                ('key_findings', models.JSONField(blank=True, default=list)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('files_attached', models.IntegerField(default=0)),
                ('file_paths', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analyzed_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='explainable_status_6579ba_idx'), models.Index(fields=['region_id'], name='explainable_region__d3628b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExplanationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('region_id', models.CharField(db_index=True, max_length=100)),
                ('region_name', models.CharField(blank=True, help_text='Human-readable region name', max_length=200)),
                ('allocation_data', models.JSONField(blank=True, default=dict, help_text='Allocation data to explain')),
                ('context', models.TextField(blank=True, help_text='Additional context for explanation')),
                ('language', models.CharField(choices=[('technical', 'Technical'), ('simple', 'Simple'), ('policy', 'Policy-focused')], default='simple', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Generation'), ('processing', 'Being Processed'), ('completed', 'Explanation Ready'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('explanation_text', models.TextField(blank=True, help_text='Generated explanation')),
                ('key_points', models.JSONField(blank=True, default=list)),
                ('policy_implications', models.JSONField(blank=True, default=list)),
                ('transparency_score', models.FloatField(blank=True, null=True)),
                ('files_attached', models.IntegerField(default=0)),
                ('file_paths', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='explainable_status_77d2a7_idx'), models.Index(fields=['region_id'], name='explainable_region__906caa_idx')],
            },
        ),
    ]
